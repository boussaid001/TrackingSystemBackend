{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "description": "API documentation for the backend services",
    "version": "1.0.0",
    "contact": {
      "email": "admin@example.com"
    }
  },
  "servers": [
    {
      "url": "/",
      "description": "Current server"
    }
  ],
  "tags": [
    {
      "name": "Generic",
      "description": "Generic CRUD operations"
    },
    {
      "name": "Package",
      "description": "Package operations"
    },
    {
      "name": "Picture",
      "description": "Picture operations"
    },
    {
      "name": "Traceability",
      "description": "Traceability operations"
    },
    {
      "name": "LineType",
      "description": "LineType operations"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": ["Generic"],
        "summary": "Root endpoint",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/create/{nom}": {
      "post": {
        "tags": ["Generic"],
        "summary": "Create a document",
        "parameters": [
          {
            "name": "nom",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Model name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/update/{nom}/{id}": {
      "put": {
        "tags": ["Generic"],
        "summary": "Update a document",
        "parameters": [
          {
            "name": "nom",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Model name"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Document ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{nom}/{id}": {
      "get": {
        "tags": ["Generic"],
        "summary": "Get a document by ID",
        "parameters": [
          {
            "name": "nom",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Model name"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Document ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Document retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createBanch/{nom}": {
      "post": {
        "tags": ["Generic"],
        "summary": "Create multiple documents",
        "parameters": [
          {
            "name": "nom",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Model name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Documents created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/delete/{nom}/{id}": {
      "delete": {
        "tags": ["Generic"],
        "summary": "Soft delete a document",
        "parameters": [
          {
            "name": "nom",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Model name"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Document ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Document soft deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reactive/{nom}/{id}": {
      "put": {
        "tags": ["Generic"],
        "summary": "Reactivate a soft deleted document",
        "parameters": [
          {
            "name": "nom",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Model name"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Document ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Document reactivated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/package/filter": {
      "post": {
        "tags": ["Package"],
        "summary": "Get packages by filter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filter": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Packages retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "packages": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addPackage": {
      "post": {
        "tags": ["Package"],
        "summary": "Create a new package",
        "description": "Adds a new package with associated products to the system",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lineTypeID": {
                    "type": "string",
                    "description": "ID of the LineType to associate with this package",
                    "example": "682c8740ee17de2b29c6feb2"
                  },
                  "traceabilityType": {
                    "type": "string",
                    "description": "Type of traceability",
                    "example": "E"
                  },
                  "code": {
                    "type": "string",
                    "description": "Package code",
                    "example": "PKG001"
                  },
                  "label": {
                    "type": "string",
                    "description": "Package label/name",
                    "example": "Test Package"
                  },
                  "bareCode": {
                    "type": "string",
                    "description": "Barcode for the package",
                    "example": "BAR123"
                  },
                  "products": {
                    "type": "array",
                    "description": "Array of products to create and associate with this package",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Product code",
                          "example": "PROD001"
                        },
                        "label": {
                          "type": "string",
                          "description": "Product name/label",
                          "example": "Test Product"
                        },
                        "typology": {
                          "type": "string",
                          "description": "Product typology",
                          "example": "TYPOLOGY_GENERIC"
                        },
                        "state": {
                          "type": "string",
                          "description": "Product state",
                          "example": "Fonctionnel"
                        },
                        "volume": {
                          "type": "number",
                          "description": "Product volume",
                          "example": 10
                        },
                        "weight": {
                          "type": "number",
                          "description": "Product weight",
                          "example": 5
                        }
                      },
                      "required": ["code", "label", "typology", "state"]
                    }
                  }
                },
                "required": ["lineTypeID", "traceabilityType", "label", "products"]
              },
              "examples": {
                "packageWithProducts": {
                  "summary": "Example package with products",
                  "value": {
                    "lineTypeID": "682c8740ee17de2b29c6feb2",
                    "traceabilityType": "E",
                    "code": "PKG001",
                    "label": "Test Package",
                    "bareCode": "BAR123",
                    "products": [
                      {
                        "code": "PROD001",
                        "label": "Test Product",
                        "typology": "TYPOLOGY_GENERIC",
                        "state": "Fonctionnel",
                        "volume": 10,
                        "weight": 5
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Package created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "created succefully"
                    },
                    "data": {
                      "type": "object",
                      "description": "Created package data"
                    },
                    "packages": {
                      "type": "array",
                      "description": "List of all packages",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/byIds": {
      "post": {
        "tags": ["Package"],
        "summary": "Get products by IDs",
        "description": "Retrieves product details for a list of product IDs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Array of product IDs to retrieve",
                "items": {
                  "type": "string",
                  "description": "MongoDB ObjectId of the product",
                  "example": "682c896b867044c82cf99cf6"
                }
              },
              "examples": {
                "singleProduct": {
                  "summary": "Single product request",
                  "value": ["682c896b867044c82cf99cf6"]
                },
                "multipleProducts": {
                  "summary": "Multiple products request",
                  "value": ["682c896b867044c82cf99cf6", "682c896b867044c82cf99cf7"]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "Array of retrieved products",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "Product ID",
                            "example": "682c896b867044c82cf99cf6"
                          },
                          "id": {
                            "type": "number",
                            "description": "Numeric product identifier",
                            "example": 148
                          },
                          "code": {
                            "type": "string",
                            "description": "Product code",
                            "example": "PROD001"
                          },
                          "label": {
                            "type": "string",
                            "description": "Product name/label",
                            "example": "Test Product"
                          },
                          "typology": {
                            "type": "string",
                            "description": "Product typology",
                            "example": "TYPOLOGY_GENERIC"
                          },
                          "state": {
                            "type": "string",
                            "description": "Product state",
                            "example": "Fonctionnel"
                          },
                          "volume": {
                            "type": "number",
                            "description": "Product volume",
                            "example": 10
                          },
                          "weight": {
                            "type": "number",
                            "description": "Product weight",
                            "example": 5
                          },
                          "packageId": {
                            "type": "string",
                            "description": "ID of the associated package",
                            "example": "682c896b867044c82cf99cf9"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp",
                            "example": "2025-05-20T13:53:47.946Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last update timestamp",
                            "example": "2025-05-20T13:53:47.946Z"
                          }
                        }
                      }
                    },
                    "products": {
                      "type": "array",
                      "description": "Duplicate of data array (maintained for backwards compatibility)",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                },
                "examples": {
                  "productResponse": {
                    "summary": "Example product response",
                    "value": {
                      "data": [
                        {
                          "_id": "682c896b867044c82cf99cf6",
                          "id": 148,
                          "deletedAt": null,
                          "code": "PROD001",
                          "label": "Test Product",
                          "volume": 10,
                          "weight": 5,
                          "typology": "TYPOLOGY_GENERIC",
                          "state": "Fonctionnel",
                          "createdAt": "2025-05-20T13:53:47.946Z",
                          "updatedAt": "2025-05-20T13:53:47.946Z",
                          "__v": 0,
                          "packageId": "682c896b867044c82cf99cf9"
                        }
                      ],
                      "products": [
                        {
                          "_id": "682c896b867044c82cf99cf6",
                          "id": 148,
                          "deletedAt": null,
                          "code": "PROD001",
                          "label": "Test Product",
                          "volume": 10,
                          "weight": 5,
                          "typology": "TYPOLOGY_GENERIC",
                          "state": "Fonctionnel",
                          "createdAt": "2025-05-20T13:53:47.946Z",
                          "updatedAt": "2025-05-20T13:53:47.946Z",
                          "__v": 0,
                          "packageId": "682c896b867044c82cf99cf9"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/upload": {
      "post": {
        "tags": ["Picture"],
        "summary": "Upload a picture",
        "description": "Uploads a picture file to the server. The picture is stored in AWS S3 and the metadata is saved in the database.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The image file to upload"
                  }
                },
                "required": ["file"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Picture uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Picture uploaded successfully"
                    },
                    "picture": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "682c9264c5af900c8ce26137"
                        },
                        "url": {
                          "type": "string",
                          "example": "https://s3-bucket-name.amazonaws.com/image.jpg"
                        },
                        "fileName": {
                          "type": "string",
                          "example": "image.jpg"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-05-20T14:30:00.000Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-05-20T14:30:00.000Z"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "successResponse": {
                    "summary": "Success response example",
                    "value": {
                      "message": "Picture uploaded successfully",
                      "picture": {
                        "_id": "682c9264c5af900c8ce26137",
                        "url": "https://packages-pfe.s3.amazonaws.com/image.jpg",
                        "fileName": "image.jpg",
                        "createdAt": "2025-05-20T14:30:00.000Z",
                        "updatedAt": "2025-05-20T14:30:00.000Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error uploading picture"
                    },
                    "error": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error saving picture to database"
                    },
                    "error": {
                      "type": "object"
                    }
                  }
                },
                "examples": {
                  "errorResponse": {
                    "summary": "Error response example",
                    "value": {
                      "message": "Error saving picture to database",
                      "error": {
                        "message": "Missing credentials in config"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "curl",
            "source": "curl -X POST -F \"file=@/path/to/image.jpg\" http://localhost:5000/upload"
          }
        ]
      }
    },
    "/download/{fileName}": {
      "get": {
        "tags": ["Picture"],
        "summary": "Download a picture",
        "description": "Downloads a picture file from the server. The picture is retrieved from AWS S3 using the fileName parameter.",
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "File name of the picture to download",
            "example": "image.jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Picture downloaded successfully",
            "content": {
              "image/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error downloading picture from S3"
                    },
                    "error": {
                      "type": "string",
                      "example": "Picture does not exist"
                    }
                  }
                },
                "examples": {
                  "errorResponse": {
                    "summary": "Error response example",
                    "value": {
                      "message": "Error downloading picture from S3",
                      "error": "Picture does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "curl",
            "source": "curl -X GET http://localhost:5000/download/image.jpg --output downloaded_image.jpg"
          },
          {
            "lang": "browser",
            "source": "http://localhost:5000/download/image.jpg"
          }
        ]
      }
    },
    "/addTraceability": {
      "post": {
        "tags": ["Traceability"],
        "summary": "Add traceability",
        "description": "Adds a new traceability record linking a package to a user at a specific timestamp and step. Note: This endpoint may return internal server errors. For a more reliable alternative, use the generic `/create/traceability` endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "packageId": {
                    "type": "string",
                    "description": "MongoDB ObjectId of the package",
                    "example": "682bd9532d0a3fac3820945e"
                  },
                  "userId": {
                    "type": "string",
                    "description": "ID of the user who flashed the package",
                    "example": "682c9035a2d1cdaf5494a729"
                  },
                  "flashedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the package was flashed",
                    "example": "2025-05-20T14:30:00.000Z"
                  },
                  "step": {
                    "type": "integer",
                    "description": "Step number (1-7)",
                    "minimum": 1,
                    "maximum": 7,
                    "example": 1
                  },
                  "flashingStatusId": {
                    "type": "integer",
                    "description": "ID of the flashing status",
                    "example": 1
                  },
                  "source": {
                    "type": "string",
                    "description": "Source of the traceability",
                    "enum": ["Cloture", "Groupe", "Forest", "ScanLog", "Inheritance", "Corner"],
                    "example": "Cloture"
                  },
                  "chauffeurId": {
                    "type": "integer",
                    "description": "ID of the driver",
                    "example": 123
                  },
                  "collabId": {
                    "type": "integer",
                    "description": "ID of the collaborator",
                    "example": 456
                  },
                  "codeRayon": {
                    "type": "string",
                    "description": "Code of the shelf",
                    "example": "R001"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Optional comment",
                    "example": "Package received in good condition"
                  },
                  "litigation": {
                    "type": "object",
                    "description": "Litigation information if required",
                    "example": {}
                  }
                },
                "required": ["packageId", "step", "source"]
              },
              "examples": {
                "traceabilityExample": {
                  "summary": "Example traceability record",
                  "value": {
                    "packageId": "682bd9532d0a3fac3820945e",
                    "step": 1,
                    "source": "Cloture",
                    "flashingStatusId": 1,
                    "flashedAt": "2025-05-20T14:30:00.000Z"
                  }
                },
                "alternativeExample": {
                  "summary": "Alternative working example using /create/traceability",
                  "description": "This example can be used with the generic `/create/traceability` endpoint which is more reliable",
                  "value": {
                    "packageId": "682bd9532d0a3fac3820945e",
                    "step": 3,
                    "flashingStatusId": 1,
                    "source": "Cloture",
                    "chauffeurId": 123,
                    "collabId": 456,
                    "flashedAt": "2025-05-20T14:30:00.000Z",
                    "codeRayon": "R001",
                    "comment": "Added via generic create endpoint"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Traceability added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Traceability"
                },
                "examples": {
                  "successResponse": {
                    "summary": "Success response example",
                    "value": {
                      "_id": "682c9abc867044c82cf99d10",
                      "packageId": "682bd9532d0a3fac3820945e",
                      "userId": "682c9035a2d1cdaf5494a729",
                      "flashedAt": "2025-05-20T14:30:00.000Z",
                      "step": 1,
                      "flashingStatusId": 1,
                      "source": "Cloture",
                      "createdAt": "2025-05-20T14:30:01.982Z",
                      "updatedAt": "2025-05-20T14:30:01.982Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/GetTraceabilityByPackage/{packageId}": {
      "get": {
        "tags": ["Traceability"],
        "summary": "Get traceabilities by package ID",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Package ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Traceabilities retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/GetTraceabilityByUser/{userId}": {
      "get": {
        "tags": ["Traceability"],
        "summary": "Get traceabilities by user ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Traceabilities retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getTraceabilityByFlashinDate/{flashedAt}": {
      "get": {
        "tags": ["Traceability"],
        "summary": "Get traceabilities by flashing date",
        "parameters": [
          {
            "name": "flashedAt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Flashing date"
          }
        ],
        "responses": {
          "200": {
            "description": "Traceabilities retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/GetLineTypeByCode/{code}": {
      "get": {
        "tags": ["LineType"],
        "summary": "Get line type by code",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Line type code"
          }
        ],
        "responses": {
          "200": {
            "description": "Line type retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Package": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "lineTypeID": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "packageId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Traceability": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "packageId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "flashedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LineType": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
